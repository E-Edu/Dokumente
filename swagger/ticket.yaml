openapi: '3.0.2'
info:
  title: Ticket Microservice
  version: 'v1'
servers:
- url: https://report.e-edu.the-morpheus.de
- url: http://localhost:80
tags:
- name: ticket
  description: Ticket Microservice
paths:
  /ticket:
    post:
      summary: Creates a new ticket
      tags: 
        - ticket
      security: 
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
      - name: X-Forwarded-User
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: string
                  format: guid
                title:
                  type: string
                body:
                  type: string
                ticket_type:
                  type: string
    
      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /ticket/{ticket_id}:
    delete:
      summary : Deletes a ticket
      tags: 
        - ticket
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: X-Forwarded-User
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:
            type: string
            format: guid
            minimum: 0
      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  
  /ticket/list:
    get:
      summary: Returns a list of all available tickets
      tags: 
        - ticket
      security:
        - JWT: [read]
        - ServiceToken: [write]
      parameters:
        - name: X-Forwarded-User
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Body contains an array of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ticket_id:
                      type: string
                      format: guid
                    task_id:
                      type: string
                      format: guid
                    sender:
                      type: string
                    title:
                      type: string
                    body:
                      type: string
                    ticket_type:
                      type: string     
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  
  /ticket/{ticket_id}/edit:
    put:
      summary : Changes a speifc tickets title and body.
      tags: 
        - ticket
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: X-Forwarded-User
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:  
            type: string
            format: guid
            minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string

      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
                    
  /ticket/{ticket_id}/answer:
     put:
      summary : Mark as troll
      tags: 
        - ticket
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: X-Forwarded-User
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:  
            type: string
            format: guid
            minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_troll:
                  type: boolean

      responses:
        '200':
          description: OK
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ServiceToken:
      type: http
      scheme: bearer
      bearerFormat: randomstring
  schemas:
    Error:
      oneOf:
        - $ref: '#/components/schemas/InternalError'
        - $ref: '#/components/schemas/ValidationError'
        - $ref: '#/components/schemas/ControllerError'

    InternalError:
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-03-22T20:26:47.367+0000
        status:
          type: string
          example: 404
        error:
          type: string
          example: Not Found
        message:
          type: string
        path:
          type: string
      
    ValidationError:
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-03-22T14:52:51.714+0000
        status:
          type: string
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
        path:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              codes:
                type: array
                items:
                  type: string
              arguments:
                type: array
                items:
                  additionalProperties:
                    type:
                      string
              default_message:
                type: string
              object_name:
                type: string
              field:
                type: string
              rejected_value:
                type: string
              binding_failure:
                type: boolean
              code:
                type: string

    ControllerError:
      type: object
      properties:
        status:
          type: integer
          example: 404
        message_key:
          type: string
          example: NOT_FOUND
        extra:
          type: string
      required:
        - message_key
        - status