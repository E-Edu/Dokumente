openapi: '3.0.2'
info:
  title: Ticket Microservice
  version: '0.1'
paths:
  /ticket:
    post:
      security: 
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: string
                  format: guid
                title:
                  type: string
                body:
                  type: string
                ticket_type:
                  type: string
    
      responses:
        '200':
          description: OK
        '4XX':
          description: Returns an error, see errors.md
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error: 
                    type: string
  
  /ticket/delete/{ticket_id}:
    delete:
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:
            type: string
            format: guid
            minimum: 0
      responses:
        '200':
          description: OK
        '4XX':
          description: Returns an error, see errors.md
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error: 
                    type: string
    
  
  /ticket/list:
    post:
      security:
        - JWT: [read]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session: 
                  type: string
                  format: guid

      responses:
        '200':
          description: Body contains an array of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ticket_id:
                      type: string
                      format: guid
                    task_id:
                      type: string
                      format: guid
                    sender:
                      type: string
                    title:
                      type: string
                    body:
                      type: string
                    ticket_type:
                      type: string

                  
        '4XX':
          description: Returns an error, see errors.md
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error: 
                    type: string
    
  
  /ticket/edit/{ticket_id}:
    put:
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: ticket_id
          in: path
          required: true
          description: The ID corresponding to the ticket
          schema:  
            type: string
            format: guid
            minimum: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                is_troll:
                  type: boolean

      responses:
        '200':
          description: OK
        '4XX':
          description: Returns an error, see errors.md
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  error: 
                    type: string
    

components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ServiceToken:
      type: http
      scheme: bearer
      bearerFormat: randomstring

