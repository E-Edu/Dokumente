openapi: 3.0.1
info:
  title: Task Microservice
  version: v1
paths:
  /task:
    post:
      summary: Creates a new task
      operationId: createTask
      security: 
      - JWT: [write]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                necessary_points:
                  type:  integer
                task_type_id:
                  type:  integer
                subject:
                  type:  integer
                module:
                  type:  integer
                lecture:
                  type:  integer
                difficulty:
                  type:  integer
      responses:
        '200':
          description: Ok

    get:
      summary: Gets all tasks based on provided parameters 
      operationId: searchTask
      security: 
      - JWT: [read]
      parameters: 
        - name: subject
          in : query
          required : true
          description: Subject
          schema :
            type: string
            format: string
            minimum: 0
        - name: module
          in : query
          required : true
          description: Module
          schema :
            type: string
            format: string
            minimum: 0
        - name: lecture
          in : query
          required : false
          description: Lecture
          schema :
            type: string
            format: string
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        task_id:
                          type: integer
                        task:
                          type: string
                        taskType:
                          type: string
                        necessary_points:
                          type: integer
                        subject:
                          type: string
                        lecture:
                          type: string
                        difficulty:
                          type: string
                        author:
                          type: string
                          
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string

  /task/{taskId}:
    get:
      summary: Gets a task
      operationId: getTask
      security:  
      - JWT: [read]
      parameters:
        - name: taskId
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
            
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: integer
                  task:
                    type: string
                  taskType:
                    type: string
                  necessary_points:
                    type: integer
                  subject:
                    type: string
                  lecture:
                    type: string
                  difficulty:
                    type: string
                  author:
                    type: string
          
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
  
  
  /task/next:
    get:
      summary: Gets next random task in current lecture
      operationId: getNext
      security:  
      - JWT: [read]
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        task_id:
                          type: integer
                        task:
                          type: string
                        taskType:
                          type: string
                        necessary_points:
                          type: integer
                        subject:
                          type: string
                        lecture:
                          type: string
                        difficulty:
                          type: string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string

  /task/my:
    get:
      summary: Gets all tasks created by the user
      operationId: getTasks
      security:  
      - JWT: [read]
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        task_id:
                          type: integer
                        task:
                          type: string
                        taskType:
                          type: string
                        necessary_points:
                          type: integer
                        subject:
                          type: string
                        lecture:
                          type: string
                        difficulty:
                          type: string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    


components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT