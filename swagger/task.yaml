openapi: 3.0.1
info:
  title: Task Microservice WIP
  version: v1
servers:
- url: https://task.e-edu.the-morpheus.de/
- url: http://localhost:80
tags:
- name: task
  description: Task Microservice
- name: subject
  description: Task Microservice
- name: module
  description: Task Microservice
- name: lecture
  description: Task Microservice
- name: solution
  description: Task Microservice
- name: difficulty
  description: Task Microservice
- name: task_type
  description: Task Microservice
paths:
  /task:
    post:
      tags:
      - task
      summary: Creates a new task
      operationId: createTask
      security: 
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                necessary_points:
                  type:  integer
                task_type_display_name:
                  type:  string
                subject_display_name:
                  type:  string
                module_display_name:
                  type:  string
                lecture_display_name:
                  type:  integer
                difficulty_display_name:
                  type:  string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
      - task
      summary: Gets all tasks based on provided query parameters 
      operationId: searchTask
      security: 
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: subject
          in : query
          required : true
          description: Subject
          schema :
            type: string
            format: string
            minimum: 0
        - name: module
          in : query
          required : true
          description: Module
          schema :
            type: string
            format: string
            minimum: 0
        - name: lecture
          in : query
          required : false
          description: Lecture
          schema :
            type: string
            format: string
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                          
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /task/{task_id}:
    get:
      tags:
      - task
      summary: Gets a task
      operationId: getTask
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
            
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - task 
      summary: Deletes a Task
      operationId: deleteTask
      security:
        - JWT: [write]
        - ServiceToken: [write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - task
      summary: Edits a new Task
      operationId: editTask
      security: 
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                necessary_points:
                  type:  integer
                task_type_display_name:
                  type:  string
                subject_display_name:
                  type:  string
                module_display_name:
                  type:  string
                lecture_display_name:
                  type:  string
                difficulty_display_name:
                  type:  string
      responses:
        '200':
          description: Ok
      
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /task/verify:
    patch:
      tags:
      - task
      summary: Verifys a task
      operationId: verifyTask
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /task/{last_task_id}:
    post:
      tags:
      - task
      summary: Gets next random task
      description: Gets next random task in current lecture based on last task and takes an integer array of the already absolved tasks ids.
      operationId: getNext
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: List of tasks that have already been absolved
              items:
                type: integer
            example:
            - 0
            - 3
            - 6
            - 7
            - 2
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /task/my:
    get:
      tags:
      - task
      summary: Gets all tasks created by the user
      operationId: getTasks
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /solution/mutiple_choice/{task_id}:
    get:
      tags:
      - solution
      summary: Get all multiple choice soulutions from task id
      operationId: getMultipleChoiceSolutions
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  solutions:
                    type: array
                    items:
                      type: string
                      
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /solution/mutiple_choice/check:
    post:
      tags:
      - solution
      summary: Check multiple choice soulutions
      operationId: checkMultipleChoiceSolutions
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                user_solutions:
                  type: array
                  items :
                    type : string
      
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /solution/freestyle/{task_id}:
    get:
      tags:
      - solution
      summary: Get all freestyle soulutions from task id
      operationId: getFreestyleSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /solution/freestyle/check:
    post:
      tags:
      - solution
      summary: Check freestyle soulution
      operationId: checkFreestyleSolution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                user_solution:
                  type: string
                  
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /solution/equations/{task_id}:
    get:
      tags:
      - solution
      summary: Get all equations soulution from task id
      operationId: getEquationsSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /solution/equations/check:
    post:
      tags:
      - solution
      summary: Check equations soulution
      operationId: checkEquationSolution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                user_solution:
                  type: string
                  
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /solution/wordsalad/{task_id}:
    get:
      tags:
      - solution
      summary: Get all wordsalad soulution from task id
      operationId: getWordsaladSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution:
                    type: string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /solution/wordsalad/check:
    post:
      tags:
      - solution
      summary: Check wordsalad soulution
      operationId: checkWordsaladSolution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                user_solution:
                  type: string
                  
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



  /solution/image/{task_id}:
    get:
      tags:
      - solution
      summary: Get all image soulution from task id
      operationId: getImageSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                    
                    
  /solution/image/check:
    post:
      tags:
      - solution
      summary: Check image soulution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_solution:
                  type: string
                  example:
                    LINK_TO_IMAGE
      
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                    


  /solution/topic_connection/{task_id}:
    get:
      tags:
      - solution
      summary: Get all topic connection soulution from task id
      operationId: getTopicConnectionSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  solutuions :
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: string
                      example:
                        Connection Point a: Connection Point b
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                    
                    
  /solution/topic_connection/check:
    post:
      tags:
      - solution
      summary: check topic connection soulution
      operationId: checkTopicConnectionSolution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
                type: object
                properties:
                  user_solutuions :
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: string
                      example:
                        Connection Point a: Connection Point b
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /subject:
    post:
      tags:
      - subject
      summary: Create a subject
      operationId: createSubject
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
                type: object
                properties:
                  display_name:
                    type: string
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
      - subject
      summary: Get all subjects
      operationId: getSubjects
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          
  /subject/{display_name}:
    get:
      tags:
      - subject
      summary: Get subject 
      operationId: getSubject
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: display_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'

                        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - subject
      summary: delete subject 
      operationId: deleteSubject
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: display_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
                        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                    
  /module:
    post:
      tags:
      - module
      summary: Create module
      operationId: createModule
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
                type: object
                properties:
                  display_name:
                    type: string
                  subject_display_name:
                    type: string
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                    
    get:
      tags:
      - module
      summary: Get all modules
      operationId: getModules
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Module'
          
  /module/{display_name}:
    get:
      tags:
      - module
      summary: Get module WIP
      operationId: getModule
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: display_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - module
      summary: Delete Module
      operationId: deleteModule
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: display_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    
                    
  /subject/{subject_display_name}/module:
    get:
      tags:
      - subject
      summary: Get modules from subject
      operationId: getModulesFromSubject
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: subject_display_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'

        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                    
  /lecture:
    post:
      tags:
      - lecture
      summary: Create lecture
      operationId: createLecture
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                module_display_name:
                  type: string
      responses:
        '200':
          description: Ok
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                    
          
    get:
      tags:
      - lecture
      summary: Get all lectures
      operationId: getLectures
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lecture'
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /lecture/{display_name}:
    get:
      tags:
      - lecture
      summary: Get lecture WIP
      operationId: getLecture
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: display_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
                          
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - lecture
      summary: Delete Lecture
      operationId: deleteLecture
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: display_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
                  
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

                    
  /module/{module_display_name}/lecture:
    get:
      tags:
      - module
      summary: Get lectures from module
      operationId: getLecturesFromModule
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: module_display_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Module'

        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /difficulty:
    post:
      tags:
      - difficulty
      summary: Create difficulty
      operationId: createDifficulty
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
      responses:
        '200':
          description: Ok
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          
    get:
      tags:
      - difficulty
      summary: Get all difficultys
      operationId: getDifficultys
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Difficulty'

        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /difficulty/{display_name}:
    get:
      tags:
      - difficulty
      summary: Get difficulty
      operationId: getDifficulty
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name : display_name
        in : path
        required : true
        schema:
          type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Difficulty'  
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - difficulty
      summary: Delete difficulty
      operationId: deleteDifficulty
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name : display_name
        in : path
        required : true
        schema:
          type: string
      responses:
        '200':
          description: Ok

        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'    


components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ServiceToken:
      type: http
      scheme: bearer
      bearerFormat: randomstring
  schemas:
    Task:
      type: object
      properties:
        task_id:
          type: integer
          example: 5
        author_id:
          type: string
          example: 0b870676-1a01-47aa-8402-859fb9806238
        task:
          type: string
        necessary_points:
          type: integer
        verified:
          type: boolean
          example:
            false
        lecture_id:
          type: integer
          example: 2
        task_type_id:
          type: integer
          example: 0
        difficulty_id:
          type: integer
          example: 2

    Lecture:
      type: object
      properties:
        lecture_id:
          type: integer
          example: 2
        display_name:
          type: string
          example: Dreiecke
        module_id:
          type: integer
          example: 5
    
    Module:
      type: object
      properties:
        module_id:
          type: integer
          example: 5
        display_name:
          type: string
          example: Geometrie
        subject_id:
          type: integer
          example: 3
    
    Subject:
      type: object
      properties:
        subject_id:
          type: integer
          example: 3
        display_name:
          type: string
          example: Mathe
    
    Difficulty:
      type: object
      properties:
        difficulty_id:
          type: integer
          example: 2
        display_name:
          type: string
          example: Schwer
    
    Error:
      type: object
      properties:
        timestamp:
          type: string
          example: 2020-03-22T14:52:51.714+0000
        status:
          type: string
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
        path:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              codes:
                type: array
                items:
                  type: string
              arguments:
                type: array
                items:
                  additionalProperties:
                    type:
                      string
              default_message:
                type: string
              object_name:
                type: string
              field:
                type: string
              rejected_value:
                type: string
              binding_failure:
                type: boolean
              code:
                type: string