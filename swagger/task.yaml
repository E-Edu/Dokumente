
openapi: 3.0.1
info:
  title: Task Microservice WIP
  version: v1
servers:
- url: http://localhost:5000 
- url: https://localhost:5000 
tags:
- name: task
  description: Task Microservice
paths:
  /task:
    post:
      tags:
      - task
      summary: Creates a new task
      operationId: createTask
      security: 
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                necessary_points:
                  type:  integer
                task_type_id:
                  type:  integer
                subject:
                  type:  integer
                module:
                  type:  integer
                lecture:
                  type:  integer
                difficulty:
                  type:  integer
      responses:
        '200':
          description: Ok
      
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string

    get:
      tags:
      - task
      summary: Gets all tasks based on provided query parameters 
      operationId: searchTask
      security: 
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: subject
          in : query
          required : true
          description: Subject
          schema :
            type: string
            format: string
            minimum: 0
        - name: module
          in : query
          required : true
          description: Module
          schema :
            type: string
            format: string
            minimum: 0
        - name: lecture
          in : query
          required : false
          description: Lecture
          schema :
            type: string
            format: string
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        task_id:
                          type: integer
                        task:
                          type: string
                        taskType:
                          type: string
                        necessary_points:
                          type: integer
                        subject:
                          type: string
                        lecture:
                          type: string
                        difficulty:
                          type: string
                        author:
                          type: string
                          
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string

  /task/{task_id}:
    get:
      tags:
      - task
      summary: Gets a task
      operationId: getTask
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
            
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: integer
                  task:
                    type: string
                  taskType:
                    type: string
                  necessary_points:
                    type: integer
                  subject:
                    type: string
                  lecture:
                    type: string
                  difficulty:
                    type: string
                  author:
                    type: string
          
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
  
  
  /task/verify/{task_id}:
    patch:
      tags:
      - task
      summary: Verifys a task
      operationId: verifyTask
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
            
      responses:
        '200':
          description: Ok
          
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
  
  
  /task/next/{last_task_id}:
    get:
      tags:
      - task
      summary: Gets next random task in current lecture based on last task
      operationId: getNext
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: last_task_id
          in: path
          required: true
          description: The unique task id of the last task
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: integer
                  task:
                    type: string
                  taskType:
                    type: string
                  necessary_points:
                    type: integer
                  subject:
                    type: string
                  lecture:
                    type: string
                  difficulty:
                    type: string
                  author:
                    type: string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string

  /task/my:
    get:
      tags:
      - task
      summary: Gets all tasks created by the user
      operationId: getTasks
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        task_id:
                          type: integer
                        task:
                          type: string
                        taskType:
                          type: string
                        necessary_points:
                          type: integer
                        subject:
                          type: string
                        lecture:
                          type: string
                        difficulty:
                          type: string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string


  /solution/mutiple_choice/{task_id}:
    get:
      tags:
      - task
      summary: Get all multiple choice soulutions from task id
      operationId: getMultipleChoiceSolutions
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  solutions:
                    type: array
                    items:
                      type: string
                      
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string


  /solution/mutiple_choice/check:
    post:
      tags:
      - task
      summary: Check multiple choice soulutions
      operationId: checkMultipleChoiceSolutions
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                user_solutions:
                  type: array
                  items :
                    type : string
      
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string


  /solution/freestyle/{task_id}:
    get:
      tags:
      - task
      summary: Get all freestyle soulutions from task id
      operationId: getFreestyleSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string


  /solution/freestyle/check:
    post:
      tags:
      - task
      summary: Check freestyle soulution
      operationId: checkFreestyleSolution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                user_solution:
                  type: string
                  
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string


  /solution/equations/{task_id}:
    get:
      tags:
      - task
      summary: Get all equations soulution from task id
      operationId: getEquationsSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string


  /solution/equations/check:
    post:
      tags:
      - task
      summary: Check equations soulution
      operationId: checkEquationSolution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                user_solution:
                  type: string
                  
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string


  /solution/wordsalad/{task_id}:
    get:
      tags:
      - task
      summary: Get all wordsalad soulution from task id
      operationId: getWordsaladSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  solution:
                    type: string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string


  /solution/wordsalad/check:
    post:
      tags:
      - task
      summary: Check wordsalad soulution
      operationId: checkWordsaladSolution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                user_solution:
                  type: string
                  
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string



  /solution/image/{task_id}:
    get:
      tags:
      - task
      summary: Get all image soulution from task id
      operationId: getImageSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    
                    
  /solution/image/check:
    post:
      tags:
      - task
      summary: Check image soulution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_solution:
                  type: string
                  example:
                    LINK_TO_IMAGE
      
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    


  /solution/topic_connection/{task_id}:
    get:
      tags:
      - task
      summary: Get all topic connection soulution from task id
      operationId: getTopicConnectionSolution
      security:  
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: task_id
          in: path
          required: true
          description: The unique task id
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  solutuions :
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: string
                      example:
                        Connection Point a: Connection Point b
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    
                    
  /solution/topic_connection/check:
    post:
      tags:
      - task
      summary: check topic connection soulution
      operationId: checkTopicConnectionSolution
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
                type: object
                properties:
                  user_solutuions :
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: string
                      example:
                        Connection Point a: Connection Point b
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string

  /subject:
    post:
      tags:
      - task
      summary: Create a subject
      operationId: createSubject
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
                type: object
                properties:
                  displayName:
                    type: string
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
    get:
      tags:
      - task
      summary: Get all subjects
      operationId: getSubjects
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  subjects :
                    type: array
                    items:
                      type: string
                    example:
                      - Mathe
                      - Englisch
                      - Deutsch
                      - Informatik
          
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
          
  /subject/{displayName}:
    get:
      tags:
      - task
      summary: Get subject WIP
      operationId: getSubject
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: displayName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: WIP Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  subject :
                    type: object
                    properties:
                      WIP :
                        type : string
                        description : WIP
                        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    
  /module:
    post:
      tags:
      - task
      summary: Create module
      operationId: createModule
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
                type: object
                properties:
                  displayName:
                    type: string
                  subjectDisplayName:
                    type: string
      responses:
        '200':
          description: Ok
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    
    get:
      tags:
      - task
      summary: Get all modules
      operationId: getModules
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          
  /module/{displayName}:
    get:
      tags:
      - task
      summary: Get module WIP
      operationId: getModule
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: displayName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok WIP
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    lecture:
                      type: object
                      properties:
                        WIP: 
                          type : string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    
  /subject/{subjectDisplayName}/module:
    get:
      tags:
      - task
      summary: Get modules from subject
      operationId: getModulesFromSubject
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: subjectDisplayName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  modules:
                    type: array
                    items:
                      type: string
                    example:
                    - Geometrie
                    - Algebra
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    
  /lecture:
    post:
      tags:
      - task
      summary: Create lecture
      operationId: createLecture
      security:
      - JWT: [write]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                moduleDisplayName:
                  type: string
      responses:
        '200':
          description: Ok
          
    get:
      tags:
      - task
      summary: Get all lectures
      operationId: getLectures
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  lectures:
                    type: array
                    items:
                      type: string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    
  /lecture/{displayName}:
    get:
      tags:
      - task
      summary: Get lecture WIP
      operationId: getLecture
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: displayName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok WIP
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    lecture:
                      type: object
                      properties:
                        WIP: 
                          type : string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
                    
  /module/{moduleDisplayName}/lecture:
    get:
      tags:
      - task
      summary: Get lectures from module
      operationId: getLecturesFromModule
      security:
      - JWT: [read]
      - ServiceToken : [read, write]
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: moduleDisplayName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  lectures:
                    type: array
                    items:
                      type: string
        
        '4XX':
          description: User Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string
        
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error :
                    type: string

components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ServiceToken:
      type: http
      scheme: bearer
      bearerFormat: randomstring